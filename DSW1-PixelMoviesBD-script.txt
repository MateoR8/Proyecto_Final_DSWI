DROP DATABASE IF EXISTS DSW1_PixelMoviesBD;	
CREATE DATABASE DSW1_PixelMoviesBD;
USE DSW1_PixelMoviesBD;

-----------------------------------------------------

CREATE TABLE CLIENTES (
    ID_CLIENTE INT IDENTITY PRIMARY KEY,
    DNI_CLIENTE VARCHAR(20) NOT NULL,
    NOMBRES_CLIENTE VARCHAR(100) NOT NULL,
    APELLIDO_PAT_CLIENTE VARCHAR(100) NOT NULL,
    APELLIDO_MAT_CLIENTE VARCHAR(100) NOT NULL,
    NUM_CELULAR_CLIENTE VARCHAR(15),
    FECHA_NACIMIENTO_CLIENTE DATE,
    CORREO_CLIENTE VARCHAR(100)
);
GO

CREATE TABLE DULCERIA (
	ID_PRODUCTO	INT	IDENTITY PRIMARY KEY, 
	NOMBRE_PRODUCTO	VARCHAR (100)	NOT NULL,
	PRECIO_PRODUCTO	DECIMAL (8,2)	NOT NULL,
	MARCA_PRODUCTO VARCHAR (30)		NULL
);
GO

CREATE TABLE SALAS (
	ID_SALA INT IDENTITY PRIMARY KEY,
    COD_SALA VARCHAR(7) NOT NULL,
    CAPACIDAD_SALA INT NOT NULL
);
GO

CREATE TABLE PELICULAS (
	ID_PELICULA INT IDENTITY PRIMARY KEY,
	NOMBRE_PELICULA VARCHAR (50)	NOT NULL,
    DIRECTOR_PELI VARCHAR (50)	NOT NULL,
    GENERO_PELI VARCHAR (30)	NOT NULL,
    DURACION_MINUTOS INT NOT NULL,
    IDIOMA_PELI VARCHAR (30) NOT NULL,
    CLASIFICACION_PELI VARCHAR (50)	NOT NULL
);
GO

CREATE TABLE FUNCIONES (
    ID_FUNCION INT IDENTITY PRIMARY KEY,
    ID_SALA INT,
    ID_PELICULA INT,
    FECHA_FUNCION DATE,
	HORARIO_FUNCION_INICIO TIME,
    FOREIGN KEY (ID_SALA) REFERENCES SALAS(ID_SALA) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (ID_PELICULA) REFERENCES PELICULAS(ID_PELICULA) ON DELETE CASCADE ON UPDATE CASCADE
);
GO

CREATE TABLE RESERVAS(
	ID_RESERVA INT IDENTITY PRIMARY KEY,
    ID_CLIENTE INT,
    ID_FUNCION INT,
	ID_PRODUCTO INT,
    FECHA_RESERVA Date,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_FUNCION) REFERENCES FUNCIONES(ID_FUNCION) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (ID_PRODUCTO) REFERENCES DULCERIA(ID_PRODUCTO) ON DELETE CASCADE ON UPDATE CASCADE
);
GO

--INSERTOS CLIENTES
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('1234567', 'Juan', 'Perez', 'Sanchez', '999486261', '2002-10-07', 'juan.perez@gmail.com');
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('2345678', 'Maria', 'Sanchez', 'Gimenez', '975203649', '2003-05-14', 'maria.geminis@gmail.com');
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('2345680', 'Ana', 'Ramirez', 'Torres', '956437890', '2000-11-05', 'ana.ramirez@gmail.com');
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('2345681', 'Luis', 'Gomez', 'Diaz', '912345678', '1985-07-19', 'luis.gomez@gmail.com');
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('2345682', 'Carlos', 'Fernandez', 'Castro', '923456789', '1979-09-29', 'carlos.fernandez@gmail.com');
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('2345683', 'Lucia', 'Martinez', 'Cruz', '934567890', '1992-01-14', 'lucia.martinez@gmail.com');
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('2345684', 'Roberto', 'Santos', 'Rojas', '945678901', '1996-06-23', 'roberto.santos@gmail.com');
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('2345685', 'Sara', 'Rios', 'Vega', '956789012', '2001-12-12', 'sara.rios@gmail.com');
INSERT INTO CLIENTES (DNI_CLIENTE, NOMBRES_CLIENTE, APELLIDO_PAT_CLIENTE, APELLIDO_MAT_CLIENTE, NUM_CELULAR_CLIENTE, FECHA_NACIMIENTO_CLIENTE, CORREO_CLIENTE)
VALUES ('2345686', 'Miguel', 'Lozano', 'Silva', '967890123', '1983-05-18', 'miguel.lozano@gmail.com');

--INSERTOS DULCERIA
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Popcorn tamaño grande', 27.00, 'Orville Redenbacher');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Gaseosa vaso grande', 6.50, 'Inka Cola');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Gaseosa vaso chico', 3.50, 'Coca Cola');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Café', 5.00, 'Dell');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Popcorn tamaño mediano', 20.00, 'Orville Redenbacher');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Hot Dog', 14.50, 'Oscar Mayer');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Nachos con queso', 10.00, 'Tostitos');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Pretzels', 7.30, 'Rold Gold');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Papas fritas', 12.10, 'Pringles');
INSERT INTO DULCERIA (NOMBRE_PRODUCTO, PRECIO_PRODUCTO, MARCA_PRODUCTO) VALUES ('Dulces', 5.00, 'Mars');

--INSERTOS SALAS
INSERT INTO SALAS (COD_SALA, CAPACIDAD_SALA) VALUES ('SALA001', 50);
INSERT INTO SALAS (COD_SALA, CAPACIDAD_SALA) VALUES ('SALA002', 150);
INSERT INTO SALAS (COD_SALA, CAPACIDAD_SALA) VALUES ('SALA003', 75);
INSERT INTO SALAS (COD_SALA, CAPACIDAD_SALA) VALUES ('SALA004', 140);
INSERT INTO SALAS (COD_SALA, CAPACIDAD_SALA) VALUES ('SALA005', 120);
INSERT INTO SALAS (COD_SALA, CAPACIDAD_SALA) VALUES ('SALA006', 50);
INSERT INTO SALAS (COD_SALA, CAPACIDAD_SALA) VALUES ('SALA007', 90);

--INSERTOS PELICULAS
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('Spider-Man: No Way Home', 'Jon Watts', 'Superhéroes', 150, 'Español', 'ATP');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('El Gran Escape', 'John Sturges', 'Aventura', 180, 'Español', 'ATP');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('El Padrino', 'Francis Ford Coppola', 'Drama', 180, 'Inglés', 'PG-13');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('La La Land', 'Damien Chazelle', 'Musical', 120, 'Español', 'ATP');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('El Señor de los Anillos: La Comunidad del Anillo', 'Peter Jackson', 'Fantasía', 180, 'Español', 'PG-13');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('Titanic', 'James Cameron', 'Drama', 195, 'Español', 'PG-13');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('La Lista de Schindler', 'Steven Spielberg', 'Drama', 195, 'Español', 'PG-13');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('Jurassic Park', 'Steven Spielberg', 'Ciencia ficción', 120, 'Español', 'PG-13');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('El Caballero Oscuro', 'Christopher Nolan', 'Acción/Crimen/Drama', 150, 'Español', 'PG-13');
INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
VALUES ('El Rey León', 'Roger Allers y Rob Minkoff', 'Animación - Musical - Drama', 150, 'Español', 'ATP');

--INSERTOS FUNCIONES
INSERT INTO FUNCIONES (ID_SALA, ID_PELICULA, FECHA_FUNCION, HORARIO_FUNCION_INICIO)
VALUES (1, 1, '2025-04-28', '15:00:00');
INSERT INTO FUNCIONES (ID_SALA, ID_PELICULA, FECHA_FUNCION, HORARIO_FUNCION_INICIO)
VALUES (2, 2, '2025-04-28', '18:00:00');
INSERT INTO FUNCIONES (ID_SALA, ID_PELICULA, FECHA_FUNCION, HORARIO_FUNCION_INICIO)
VALUES (3, 3, '2025-04-29', '20:30:00');
INSERT INTO FUNCIONES (ID_SALA, ID_PELICULA, FECHA_FUNCION, HORARIO_FUNCION_INICIO)
VALUES (4, 4, '2025-04-29', '17:45:00');
INSERT INTO FUNCIONES (ID_SALA, ID_PELICULA, FECHA_FUNCION, HORARIO_FUNCION_INICIO)
VALUES (5, 5, '2025-04-30', '21:15:00');

-- INSERTOS RESERVAS
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (1, 1, 1, '2025-05-25');
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (2, 1, 2, '2025-05-26');
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (3, 2, 1, '2025-06-26');
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (4, 2, 3, '2025-06-27');
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (5, 3, 2, '2025-06-28');
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (6, 3, 4, '2025-07-28');
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (7, 4, 3, '2025-07-28');
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (8, 4, 5, '2025-07-29');
INSERT INTO RESERVAS (ID_CLIENTE, ID_FUNCION, ID_PRODUCTO, FECHA_RESERVA)VALUES (9, 5, 1, '2025-07-29');
GO

---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------


---- STORED PROCEDURES ----
---------------------------

--- CLIENTES---

--listado
CREATE PROCEDURE sp_listar_clientes
AS
BEGIN
	SELECT * FROM CLIENTES;
END;
GO

--registro
CREATE PROCEDURE sp_registrar_cliente
@DNI_CLIENTE VARCHAR(20),
@NOMBRES_CLIENTE VARCHAR(100),
@APELLIDO_PAT_CLIENTE VARCHAR(100),
@APELLIDO_MAT_CLIENTE VARCHAR(100),
@NUM_CELULAR_CLIENTE VARCHAR(15),
@FECHA_NACIMIENTO_CLIENTE DATE,
@CORREO_CLIENTE VARCHAR(100)
AS
BEGIN
	INSERT INTO CLIENTES VALUES (@DNI_CLIENTE, @NOMBRES_CLIENTE, @APELLIDO_PAT_CLIENTE, @APELLIDO_MAT_CLIENTE, @NUM_CELULAR_CLIENTE, @FECHA_NACIMIENTO_CLIENTE, @CORREO_CLIENTE);
END;
GO

--actualizado
CREATE PROCEDURE sp_actualizar_cliente
    @ID_CLIENTE INT,
    @DNI_CLIENTE VARCHAR(20),
    @NOMBRES_CLIENTE VARCHAR(100),
    @APELLIDO_PAT_CLIENTE VARCHAR(100),
    @APELLIDO_MAT_CLIENTE VARCHAR(100),
    @NUM_CELULAR_CLIENTE VARCHAR(15),
    @FECHA_NACIMIENTO_CLIENTE DATE,
    @CORREO_CLIENTE VARCHAR(100)
AS
BEGIN
    UPDATE CLIENTES
    SET
        DNI_CLIENTE = @DNI_CLIENTE,
        NOMBRES_CLIENTE = @NOMBRES_CLIENTE,
        APELLIDO_PAT_CLIENTE = @APELLIDO_PAT_CLIENTE,
        APELLIDO_MAT_CLIENTE = @APELLIDO_MAT_CLIENTE,
        NUM_CELULAR_CLIENTE = @NUM_CELULAR_CLIENTE,
        FECHA_NACIMIENTO_CLIENTE = @FECHA_NACIMIENTO_CLIENTE,
        CORREO_CLIENTE = @CORREO_CLIENTE
    WHERE
        ID_CLIENTE = @ID_CLIENTE;
END;
GO

--Eliminado
CREATE PROCEDURE sp_eliminar_cliente
@ID_CLIENTE INT
AS
BEGIN
	DELETE FROM CLIENTES WHERE @ID_CLIENTE = ID_CLIENTE;
END;
GO

---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
--- DULCERIA ---

--listado
CREATE PROCEDURE sp_listar_dulceria
AS
BEGIN
	SELECT * FROM DULCERIA;
END;
GO

--registro
CREATE PROCEDURE sp_registrar_dulce
@NOMBRE_PRODUCTO VARCHAR(100),
@PRECIO_PRODUCTO DECIMAL(8,2),	
@MARCA_PRODUCTO VARCHAR(30)		
AS
BEGIN
	INSERT INTO DULCERIA VALUES(@NOMBRE_PRODUCTO, @PRECIO_PRODUCTO, @MARCA_PRODUCTO);
END;
GO

--actualizado
CREATE PROCEDURE sp_actualizar_dulce
@ID_PRODUCTO INT,
@NOMBRE_PRODUCTO VARCHAR(100),
@PRECIO_PRODUCTO DECIMAL(8,2),	
@MARCA_PRODUCTO VARCHAR(30)		
AS
BEGIN
	UPDATE DULCERIA 
	SET 
		NOMBRE_PRODUCTO = @NOMBRE_PRODUCTO, 
		PRECIO_PRODUCTO = @PRECIO_PRODUCTO, 
		MARCA_PRODUCTO = @MARCA_PRODUCTO
	WHERE 
		@ID_PRODUCTO=ID_PRODUCTO;
END;
GO

--eliminado
CREATE PROCEDURE sp_eliminar_dulce
@ID_PRODUCTO INT
AS
BEGIN
	DELETE FROM DULCERIA WHERE @ID_PRODUCTO = ID_PRODUCTO;
END;
GO

---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
--- SALAS ---

--listado
CREATE PROCEDURE sp_listar_salas
AS
BEGIN
	SELECT * FROM SALAS;
END;
GO

--registro
CREATE PROCEDURE sp_registrar_sala
@COD_SALA VARCHAR(7),
@CAPACIDAD_SALA INT
AS
BEGIN
	INSERT INTO SALAS VALUES (@COD_SALA, @CAPACIDAD_SALA);
END;
GO

--actualizado
CREATE PROCEDURE sp_actualizar_sala
@ID_SALA INT,
@COD_SALA VARCHAR(7),
@CAPACIDAD_SALA INT
AS
BEGIN
	UPDATE SALAS 
	SET COD_SALA = @COD_SALA, 
		CAPACIDAD_SALA = @CAPACIDAD_SALA
	WHERE
		@ID_SALA = ID_SALA;
END;
GO

--eliminado
CREATE PROCEDURE sp_eliminar_sala
@ID_SALA INT
AS
BEGIN
	DELETE FROM SALAS WHERE @ID_SALA = ID_SALA;
END;
GO

---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
-- CRUD PELICULAS

-- LISTADO

CREATE PROCEDURE sp_Listar_Peliculas
AS
BEGIN
    SELECT 
        ID_PELICULA,
        NOMBRE_PELICULA,
        DIRECTOR_PELI,
        GENERO_PELI,
        DURACION_MINUTOS,
        IDIOMA_PELI,
        CLASIFICACION_PELI
    FROM PELICULAS;
END;
GO

-- INSERTO

CREATE PROCEDURE sp_Insertar_Pelicula
    @NOMBRE_PELICULA VARCHAR(50),
    @DIRECTOR_PELI VARCHAR(50),
    @GENERO_PELI VARCHAR(30),
    @DURACION_MINUTOS INT,
    @IDIOMA_PELI VARCHAR(30),
    @CLASIFICACION_PELI VARCHAR(50)
AS
BEGIN
    INSERT INTO PELICULAS (NOMBRE_PELICULA, DIRECTOR_PELI, GENERO_PELI, DURACION_MINUTOS, IDIOMA_PELI, CLASIFICACION_PELI)
    VALUES (@NOMBRE_PELICULA, @DIRECTOR_PELI, @GENERO_PELI, @DURACION_MINUTOS, @IDIOMA_PELI, @CLASIFICACION_PELI);
END;
GO

--------------------

-- ACTUALIZADO

CREATE PROCEDURE sp_Actualizar_Pelicula
    @ID_PELICULA INT,
    @NOMBRE_PELICULA VARCHAR(50),
    @DIRECTOR_PELI VARCHAR(50),
    @GENERO_PELI VARCHAR(30),
    @DURACION_MINUTOS INT,
    @IDIOMA_PELI VARCHAR(30),
    @CLASIFICACION_PELI VARCHAR(50)
AS
BEGIN
    UPDATE PELICULAS
    SET 
        NOMBRE_PELICULA = @NOMBRE_PELICULA,
        DIRECTOR_PELI = @DIRECTOR_PELI,
        GENERO_PELI = @GENERO_PELI,
        DURACION_MINUTOS = @DURACION_MINUTOS,
        IDIOMA_PELI = @IDIOMA_PELI,
        CLASIFICACION_PELI = @CLASIFICACION_PELI
    WHERE ID_PELICULA = @ID_PELICULA
END;
GO
--------------------

-- ELIMINADO

CREATE PROCEDURE sp_Eliminar_Pelicula
    @ID_PELICULA INT
AS
BEGIN
    DELETE FROM PELICULAS
    WHERE ID_PELICULA = @ID_PELICULA
END;
GO

---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------

-- CRUD FUNCIONES

-- LISTADO
Alter PROCEDURE sp_Listar_Funciones
AS
BEGIN
    SELECT 
        f.ID_FUNCION,
        f.ID_SALA,
		s.COD_SALA,
        f.ID_PELICULA,
		p.NOMBRE_PELICULA,
        f.FECHA_FUNCION,
        f.HORARIO_FUNCION_INICIO
    FROM FUNCIONES f
	Join SALAS s on f.ID_SALA = s.ID_SALA Join PELICULAS p on f.ID_PELICULA = p.ID_PELICULA
END;
GO

-- INSERTO
CREATE PROCEDURE sp_Insertar_Funcion
    @ID_SALA INT,
    @ID_PELICULA INT,
    @FECHA_FUNCION DATE,
    @HORARIO_FUNCION_INICIO TIME
AS
BEGIN
    INSERT INTO FUNCIONES (ID_SALA, ID_PELICULA, FECHA_FUNCION, HORARIO_FUNCION_INICIO)
    VALUES (@ID_SALA, @ID_PELICULA, @FECHA_FUNCION, @HORARIO_FUNCION_INICIO)
END;
GO

-- ACTUALIZADO
CREATE PROCEDURE sp_Actualizar_Funcion
    @ID_FUNCION INT,
    @ID_SALA INT,
    @ID_PELICULA INT,
    @FECHA_FUNCION DATE,
    @HORARIO_FUNCION_INICIO TIME
AS
BEGIN
    UPDATE FUNCIONES
    SET 
        ID_SALA = @ID_SALA,
        ID_PELICULA = @ID_PELICULA,
        FECHA_FUNCION = @FECHA_FUNCION,
        HORARIO_FUNCION_INICIO = @HORARIO_FUNCION_INICIO
    WHERE ID_FUNCION = @ID_FUNCION
END;
GO

-- ELIMINADO
CREATE PROCEDURE sp_Eliminar_Funcion
    @ID_FUNCION INT
AS
BEGIN
    DELETE FROM FUNCIONES
    WHERE ID_FUNCION = @ID_FUNCION
END;
GO

---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------

-- RESERVAS

-- LISTADO
CREATE PROCEDURE sp_Listar_Reservas
AS
BEGIN
    SELECT r.ID_RESERVA as 'idReserva', 
		r.FECHA_RESERVA as 'fechaReserva',
		c.NOMBRES_CLIENTE as 'nombreCliente', 
		c.APELLIDO_PAT_CLIENTE as 'apellidoPatCliente', 
		c.APELLIDO_MAT_CLIENTE as 'apellidoMatCliente', 
		c.CORREO_CLIENTE as 'correoCliente',
		f.FECHA_FUNCION as 'fechaFuncion',
		pel.NOMBRE_PELICULA as 'nombrePelicula',
		pel.GENERO_PELI as 'generoPelicula',
		pel.CLASIFICACION_PELI as 'clasifPelicula',
		s.COD_SALA as 'sala',
		p.NOMBRE_PRODUCTO as 'producto'
	from RESERVAS r 
		join CLIENTES c on c.ID_CLIENTE = r.ID_CLIENTE
		join FUNCIONES f on f.ID_FUNCION = r.ID_FUNCION
		join DULCERIA p on p.ID_PRODUCTO = r.ID_PRODUCTO
		join PELICULAS pel on pel.ID_PELICULA = f.ID_PELICULA
		join SALAS s on s.ID_SALA = f.ID_SALA
END;
GO

-- LISTADO CON FILTROS PARA REPORTE
CREATE Procedure sp_Listar_ReservasConFiltros
    @fechaReserva DATE = NULL,
    @nombresCliente varchar(100) = NULL,
    @apePaterno varchar(100) = NULL,
	@apeMaterno varchar(100) = NULL,
    @fechaFuncion DATE = NULL,
	@nombrePelicula varchar(50) = NULL,
	@codigoSala varchar(7) = NULL
As
Begin
	SELECT r.ID_RESERVA as 'idReserva', 
		r.FECHA_RESERVA as 'fechaReserva',
		c.NOMBRES_CLIENTE as 'nombreCliente', 
		c.APELLIDO_PAT_CLIENTE as 'apellidoPatCliente', 
		c.APELLIDO_MAT_CLIENTE as 'apellidoMatCliente', 
		c.CORREO_CLIENTE as 'correoCliente',
		f.FECHA_FUNCION as 'fechaFuncion',
		pel.NOMBRE_PELICULA as 'nombrePelicula',
		pel.GENERO_PELI as 'generoPelicula',
		pel.CLASIFICACION_PELI as 'clasifPelicula',
		s.COD_SALA as 'sala',
		p.NOMBRE_PRODUCTO as 'producto'
	from RESERVAS r 
		join CLIENTES c on c.ID_CLIENTE = r.ID_CLIENTE
		join FUNCIONES f on f.ID_FUNCION = r.ID_FUNCION
		join DULCERIA p on p.ID_PRODUCTO = r.ID_PRODUCTO
		join PELICULAS pel on pel.ID_PELICULA = f.ID_PELICULA
		join SALAS s on s.ID_SALA = f.ID_SALA
    WHERE (@fechaReserva IS NULL OR r.FECHA_RESERVA = @fechaReserva)
      AND (@nombresCliente IS NULL OR c.NOMBRES_CLIENTE LIKE '%' + @nombresCliente + '%') 
	  AND (@apePaterno IS NULL OR c.APELLIDO_PAT_CLIENTE LIKE '%' + @apePaterno + '%') 
	  AND (@apeMaterno IS NULL OR c.APELLIDO_MAT_CLIENTE LIKE '%' + @apeMaterno + '%') 
      AND (@fechaFuncion IS NULL OR f.FECHA_FUNCION = @fechaFuncion)
      AND (@nombrePelicula IS NULL OR pel.NOMBRE_PELICULA LIKE '%' + @nombrePelicula + '%')
      AND (@codigoSala IS NULL OR s.COD_SALA LIKE '%' + @codigoSala + '%')
End;
GO

-- LISTADOS DE PELICULAS Y SALAS PARA SELECT LIST

Create or Alter Procedure sp_Peliculas_Select
As
Begin
	Select ID_PELICULA, NOMBRE_PELICULA from PELICULAS
End
Go

Create or Alter Procedure sp_Salas_Select
As
Begin
	Select ID_SALA, COD_SALA from SALAS
End
Go

